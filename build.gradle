plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.protobuf' version '0.8.17' // Ajusta la versión según sea necesario

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    implementation 'org.springframework.kafka:spring-kafka:3.3.0'

    runtimeOnly 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
//----> gRPC    <---
    implementation 'net.devh:grpc-spring-boot-starter:3.1.0.RELEASE'
    implementation 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE'
    //---> Swagger  <--
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'




}

tasks.named('test') {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.12' // Ajusta la versión según sea necesario
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {

            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/generated/java"
}
